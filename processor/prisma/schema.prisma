generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  clerkUserId String
  email       String
  firstName   String
  lastName    String
  password    String
  timestamp   DateTime @default(now())
}

model Zap {
  id        String   @id @default(uuid())
  triggerId String
  trigger   Trigger?
  actions   Action[]
  zapRun    ZapRun[]
  timestamp DateTime @default(now())
}

model Trigger {
  id        String           @id @default(uuid())
  zapId     String           @unique
  triggerid String
  type      AvailableTrigger @relation(fields: [triggerid], references: [id])
  zap       Zap              @relation(fields: [zapId], references: [id])
  timestamp DateTime         @default(now())
}

model Action {
  id        String          @id @default(uuid())
  zapId     String
  zap       Zap             @relation(fields: [zapId], references: [id])
  actionId  String
  type      AvailableAction @relation(fields: [actionId], references: [id])
  timestamp DateTime        @default(now())
}

model AvailableAction {
  id        String   @id @default(uuid())
  name      String
  actions   Action[]
  timestamp DateTime @default(now())
}

model AvailableTrigger {
  id        String    @id @default(uuid())
  name      String
  triggers  Trigger[]
  timestamp DateTime  @default(now())
}

model ZapRun {
  id           String        @id @default(uuid())
  zapId        String
  metadata     Json
  zap          Zap           @relation(fields: [zapId], references: [id])
  zapRunOutBox ZapRunOutBox?
  timestamp    DateTime      @default(now())
}

model ZapRunOutBox {
  id        String   @id @default(uuid())
  zapRunId  String   @unique
  zapRun    ZapRun   @relation(fields: [zapRunId], references: [id])
  timestamp DateTime @default(now())
}
